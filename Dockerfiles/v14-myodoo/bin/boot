#!/bin/bash
#
# This script is designed to be run inside the container
# Version 2.0.2
# Date 03.10.2022
##############################################################################
#
#    Shell Script for Odoo Docker Container
#    Copyright (C) 2014-now Equitania Software GmbH(<http://www.equitania.de>).
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##############################################################################

currentdate=`date +"%d.%m.%Y %T"`
echo "Odoo Container starting now: $currentdate"

# config path
file="/opt/odoo/etc/odoo.conf"

# fail hard and fast even on pipelines
set -eo pipefail

function start {
    echo "Running odoo..."
    set +e
    if [ ! -e $1 ]; then
        echo "...with additional args: $*"
    fi
    sudo -i -u odoo python3 \
                    /opt/odoo/odoo-server/odoo-bin \
                    -c $file \
                    $*

    SERVICE_PID=$!
    set -e
}

function update {
    echo "update odoo..."
    set +e
    if [ ! -e $1 ]; then
        echo "...with additional args: $*"
    fi
    sudo -i -u odoo python3 \
                    /opt/odoo/odoo-server/odoo-bin \
                    --update=all \
                    --workers=0 \
                    --no-xmlrpc \
                    --stop-after-init \
                    $*

    SERVICE_PID=$!
    set -e
}

# smart shutdown on SIGINT and SIGTERM
function on_exit() {
    kill -TERM $SERVICE_PID
    wait $SERVICE_PID 2>/dev/null
    exit 0
}
trap on_exit INT TERM

datadir="/opt/odoo/data"
if [ "$(ls -A $datadir)" ]; then
    echo "$datadir is already exists"
else
    echo "Set rights data to odoo..."
    chown -R odoo $datadir
fi

echo "Running parameters..."
for arg in "$*"
do
    $arg
done

wait
